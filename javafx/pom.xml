<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>peng.gao</groupId>
        <artifactId>java</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>javafx</artifactId>

    <properties>
        <jdk.version>17</jdk.version>
        <graalvm.version>23.0.0</graalvm.version>
        <openfx.version>11.0.2</openfx.version>
        <!--        <openfx.version>17.0.7</openfx.version>-->
        <junit.version>5.9.2</junit.version>
        <lombok.version>1.18.28</lombok.version>

        <app.name>SomeIpMatrixCheckerApp</app.name>
        <app.version>1.0.0</app.version>
        <app.icon>projects/smIpCmxCheck/logo.ico</app.icon>
        <!--        must include module name-->
        <main.class>projects.smIpCmxCheck.SomeIpMatrixCheckerApplication</main.class>
        <module.name>javafxdemos</module.name>
        <!--        app-image", "exe", "msi"-->
        <image.type>app-image</image.type>
        <!--        javaFx应用程序打包步骤：-->
        <!--        1. 更改以上参数，其中app.name、app.icon、main.path三个参数必须填写-->
        <!--        2. 运行命令生成可执行程序-->
        <!--            mvn clean   -->
        <!--            mvn javafx:jlink -f pom.xml -->
        <!--            mvn exec:exec@image -f pom.xml  -->
        <!--            mvn exec:exec@installer -f pom.xml  -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <native.maven.plugin.version>0.9.23</native.maven.plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${openfx.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${openfx.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${openfx.version}</version>
            <!--            <scope>provided</scope>-->
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.pixelduke/fxribbon -->
        <dependency>
            <groupId>com.pixelduke</groupId>
            <artifactId>fxribbon</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.jfxtras</groupId>
            <artifactId>jmetro</artifactId>
            <version>11.6.16</version>
        </dependency>
        <dependency>
            <groupId>org.kordamp.bootstrapfx</groupId>
            <artifactId>bootstrapfx-core</artifactId>
            <version>0.4.0</version>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- 自定义jar-->
        <dependency>
            <groupId>cn.ept</groupId>
            <artifactId>excelhandler</artifactId>
            <version>2.2.1</version>
        </dependency>
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
            <version>${graalvm.version}</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!--  one key to generate the native image. usage:
        mvn clean package
        mvn -Pnative -Dagent exec:exec@java-agent
        mvn -DskipTests=true -Pnative -Dagent package
 -->
        <profile>
            <id>native</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>java-agent</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>java</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                    <arguments>
                                        <argument>-classpath</argument>
                                        <classpath/>
                                        <argument>${main.class}</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>native</id>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <executable>${project.build.directory}/${app.name}</executable>
                                    <workingDirectory>${project.build.directory}</workingDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <version>${native.maven.plugin.version}</version>
                        <extensions>true</extensions>
                        <executions>
                            <execution>
                                <id>build-native</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <phase>package</phase>
                            </execution>
                            <execution>
                                <id>test-native</id>
                                <goals>
                                    <goal>test</goal>
                                </goals>
                                <phase>test</phase>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>false</skip>
                            <agent>
                                <enabled>true</enabled>
                            </agent>
                            <fallback>false</fallback>
                            <imageName>${app.name}</imageName>
                            <mainClass>${main.class}</mainClass>
                            <buildArgs>
                                <!-- With Enterprise you can use the G1GC -->
                                <!--buildArg>- -gc=G1</buildArg-->
                                <buildArg>--no-fallback</buildArg>
                                <buildArg>--report-unsupported-elements-at-runtime</buildArg>
                            </buildArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>UTF-8</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <executions>
                    <execution>
                        <!-- Default configuration for running with: mvn clean javafx:run -->
                        <id>default-cli</id>
                        <configuration>
                            <mainClass>${module.name}/${main.class}</mainClass>
                            <launcher>${app.name}</launcher>
                            <jlinkZipName>${app.name}</jlinkZipName>
                            <jlinkImageName>build-link</jlinkImageName>
                            <noManPages>true</noManPages>
                            <stripDebug>true</stripDebug>
                            <noHeaderFiles>true</noHeaderFiles>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--            &lt;!&ndash; copy dependency jar to specified location&ndash;&gt;
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-dependency-plugin</artifactId>
                            <version>3.2.0</version>
                            <executions>
                                <execution>
                                    <id>copy-dependencies</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>copy-dependencies</goal>
                                    </goals>
                                    <configuration>
                                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
                                        <overWriteReleases>false</overWriteReleases>
                                        <overWriteSnapshots>false</overWriteSnapshots>
                                        <overWriteIfNewer>true</overWriteIfNewer>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- 指定在打包节点执行jar包合并操作 -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>image</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <!-- Application Name-->
                                <argument>-n</argument>
                                <argument>${app.name}</argument>
                                <argument>--type</argument>
                                <argument>${image.type}</argument>
                                <argument>--java-options</argument>
                                <argument>
                                    --add-exports=javafx.controls/com.sun.javafx.scene.control.behavior=com.jfoenix
                                </argument>
                                <argument>-m</argument>
                                <argument>${module.name}/${main.class}</argument>
                                <argument>--icon</argument>
                                <argument>${project.basedir}/src/main/resources/${app.icon}</argument>
                                <argument>--runtime-image</argument>
                                <argument>${project.basedir}/target/build-link</argument>
                                <argument>--dest</argument>
                                <argument>${project.basedir}/target/build-package</argument>
                                <argument>--verbose</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>installer</id>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>jpackage</executable>
                            <workingDirectory>${project.basedir}</workingDirectory>
                            <arguments>
                                <argument>-n</argument>
                                <argument>${app.name}</argument>
                                <argument>--app-image</argument>
                                <argument>${project.basedir}/target/build-package/${app.name}</argument>
                                <argument>--app-version</argument>
                                <argument>${app.version}</argument>
                                <argument>--dest</argument>
                                <argument>${project.basedir}/target/build-link-package</argument>
                                <argument>--temp</argument>
                                <argument>${project.basedir}/target/build-link-package/temp</argument>
                                <argument>--win-dir-chooser</argument>
                                <argument>--win-menu</argument>
                                <argument>--win-menu-group</argument>
                                <argument>${app.name}</argument>
                                <argument>--win-shortcut</argument>
                                <argument>--verbose</argument>
                                <argument>--vendor</argument>
                                <argument>Shanghai E-Planet Technologies Co.,Ltd</argument>
                                <argument>--copyright</argument>
                                <argument>2014–2023 上海怿星电子科技有限公司</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>